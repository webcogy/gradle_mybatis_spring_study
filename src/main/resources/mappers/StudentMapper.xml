<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="gradle_mybatis_spring_study.mapper.StudentMapper">

	<sql id="selectSQL">
		SELECT STUD_ID AS studId, NAME, EMAIL, DOB, PHONE, GENDER
		FROM
		STUDENTS
	</sql>

	<sql id="whereSQL">
		<where>
			<if test="studId != null">
				stud_id=#{studId}
			</if>
		</where>
	</sql>


	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSQL" />
	</select>


	<select id="selectStudentByNo"
		parameterType="gradle_mybatis_spring_study.dto.Student"
		resultType="Student">

		<include refid="selectSQL" />
		<include refid="whereSQL" />
	</select>


	<!-- ResultMap이용 -->
	<resultMap type="Student" id="stdResult">
		<id column="stud_id" property="studId" />
		<result column="f" property="phone.countryCode" />
		<result column="m" property="phone.stateCode" />
		<result column="l" property="phone.number" />
	</resultMap>


	<select id="selectStudentByNoWithResultMap"
		parameterType="Student" resultMap="stdResult">
		select stud_id, name, email, dob,
		substr(phone, 1, 3) as f,
		substr(phone, 5, 3) as m,
		substr(phone, 9, 4)
		as l
		from students where stud_id=#{studId}
	</select>


	<insert id="insertStudent" parameterType="Student">
		insert into
		students(stud_id, name, email, phone, dob)
		values(#{studId}, #{name},
		#{email}, #{phone}, #{dob})
	</insert>


	<!-- delete -->
	<delete id="deleteStudent" parameterType="int">
		delete
		from students
		where stud_id=#{studId}
	</delete>

	<!-- update -->
	<update id="updateStudent" parameterType="Student">
		update students
		set
		name=#{name}, email=#{email},phone=#{phone}, dob=#{dob}
		where
		stud_id=#{studId}
	</update>

	<!-- 결과매핑 -->
	<resultMap type="Student" id="StudentResult">
		<id property="studId" column="stud_id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="dob" column="dob" />
	</resultMap>

	<select id="selectStudentByAllWithResultMap"
		resultMap="StudentResult">
		<include refid="selectSQL" />
	</select>

	<!-- HashMap -->
	<select id="selectStudentByAllForHashMap" resultType="map">
		<include refid="selectSQL" />
	</select>

	<!-- 내포된 결과매핑(ResultMap)을 사용한 일대일 매핑 -->
	<resultMap id="StudentAssociation" type="Student"
		extends="StudentResult">
		<association property="address"
			resultMap="gradle_mybatis_spring_study.mapper.AddressMapper.AddressResult" />
	</resultMap>

	<select id="selectStudentByNoAssociation"
		parameterType="Student" resultMap="StudentAssociation">
		select stud_id, name, email, phone,
		dob, a.addr_id, street, city, state, zip, country
		from students s join
		addresses a on s.addr_id=a.addr_id
		where stud_id = #{studId}
	</select>

	<insert id="insertEnumStudent" parameterType="Student">
		insert into students(stud_id, name, email,phone, dob, gender)
		values(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
	</insert>
	
	<select id="selectStudentByNoForEnum" parameterType="Student">
		<include refid="selectSQL" />
		WHERE STUDID = #{studId}
	</select>


	<!-- 여러 개의 입력 파라미터 전달 -->
	<sql id="where_name_email">
		<where>
			<if test="name != null">
				name = #{name}
			</if>
			<if test="email != null">
				AND email = #{email}
			</if>
		</where>
	</sql>
	
	<resultMap type="Student" id="StudentGenderResult" extends="StudentResult">
		<result property="gender" column="gender" />
	</resultMap>
	
	<select id="selectStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="where_name_email" />
	</select>
	
	<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="where_name_email" />
	</select>

	<!-- ResultSet 처리방식의 재정의 -->
	<select id="selectStudentForMap" parameterType="int" resultMap="StudentGenderResult">
		<include refid="selectSQL" />
		<include refid="whereSQL" />
	</select>

	<update id="updateSetStudent" parameterType="Student">
		update students
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="email != null">email=#{email},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="dob != null">dob=#{dob},</if>
		</set>
		<include refid="whereSQL" />
	</update>

</mapper>






